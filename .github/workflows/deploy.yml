name: Remote Docker Compose Deploy with .env

on:
  push:
    branches: [main]

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/frontend
          tags: |
            type=ref,event=branch
            type=sha
            
      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push-frontend
    runs-on: ubuntu-latest

    steps:
      - name: SSH into server and deploy using docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "Cloning latest repo..."
            rm -rf appdir
            git clone --single-branch --branch main https://github.com/${{ github.repository }}.git appdir
            cd appdir/back

            echo "Creating .env file..."
            echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
            echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
            echo "BOT_TOKEN_TURISM=${{ secrets.BOT_TOKEN_TURISM }}" >> .env
            echo "BOT_TOKEN_AUTHORIZE=${{ secrets.BOT_TOKEN_AUTHORIZE }}" >> .env
            echo "ADMIN_TELEGRAM_ID=${{ secrets.ADMIN_TELEGRAM_ID }}" >> .env
            echo "BOT_TOKEN_BOOKING=${{ secrets.BOT_TOKEN_BOOKING }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env

            echo "Stopping old containers..."
            docker compose down

            echo "Pulling latest frontend image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:main

            echo "Starting containers with fresh build..."
            docker compose up -d --build