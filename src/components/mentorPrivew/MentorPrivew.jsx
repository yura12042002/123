import React, { useState, useEffect } from "react";
import ReactPlayer from "react-player";
import { Prism as SyntaxHighlighter } from "react-syntax-highlighter";
import { coyWithoutShadows } from "react-syntax-highlighter/dist/esm/styles/prism";
import { motion } from "framer-motion";
import styles from "./mentorPrivew.module.css";
import BlockTextLayout from "../layouts/blockTextLayout/BlockTextLayout";

const arr = [
  {
    title: "üîë –î–æ—Å—Ç—É–ø –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É",
    text: "</ –¢—ã –ø–æ–ª—É—á–∏—à—å –¥–æ—Å—Ç—É–ø –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —É—á–µ–Ω–∏–∫–∞, –≥–¥–µ —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ, —Å–º–æ–∂–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–∞–∫–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏ –∫–∞–∫ (–ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å 2-3 —Å–∞–º—ã—Ö –≤–∞–∂–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞) –±–µ—Å–ø–ª–∞—Ç–Ω–æ, —Ç–∞–∫–∂–µ —Ç–µ–±–µ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ–ª–µ–∑–Ω—ã–µ –æ–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ >",
  },
  {
    title: "üìå –†–∞–∑–±–æ—Ä –æ—à–∏–±–æ–∫ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞",
    text: "</ –í –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è –±—É–¥–µ–º –ø—Ä–æ–≤–æ–¥–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π —Ä–∞–∑–±–æ—Ä –æ—à–∏–±–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–≤–µ—Ä—à–∞—é—Ç—Å—è –Ω–∞—á–∏–Ω–∞—é—â–∏–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏, —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–∞—Ö>",
  },
  {
    title: "‚è≥ –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
    text: "</ –ü–æ–¥–±–µ—Ä–µ–º —É–¥–æ–±–Ω–æ–µ —Ç–µ–±–µ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–Ω—è—Ç–∏–π, –∞ —Ç–∞–∫–∂–µ –±—É–¥–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–≤—è–∑—å, —á—Ç–æ–±—ã —è –º–æ–≥ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –¥–∞–≤–∞—Ç—å —Ü–µ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ >",
  },
];

const codeTitleBase = `let –º–Ω–µ = –ø–æ–º–æ—á—å —Ç–µ–±–µ c frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π!`;

const MentorPrivew = () => {
  const [renderedTitle, setRenderedTitle] = useState("");
  const [charIndex, setCharIndex] = useState(0);

  const [formattedTitle, setFormattedTitle] = useState(codeTitleBase);

  useEffect(() => {
    const handleResize = () => {
      const screenWidth = window.innerWidth;
      let newTitle = codeTitleBase;

      if (screenWidth < 600) {
        newTitle = `let –º–Ω–µ = –ø–æ–º–æ—á—å —Ç–µ–±–µ\n c frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π!`;
      } else if (screenWidth < 400) {
        newTitle = `let –º–Ω–µ = –ø–æ–º–æ—á—å\n —Ç–µ–±–µ\n c frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π!`;
      }

      setFormattedTitle(newTitle);
    };

    window.addEventListener("resize", handleResize);
    handleResize();

    return () => window.removeEventListener("resize", handleResize);
  }, []);

  useEffect(() => {
    if (charIndex < formattedTitle.length) {
      const timer = setTimeout(() => {
        setRenderedTitle((prev) => prev + formattedTitle[charIndex]);
        setCharIndex((prev) => prev + 1);
      }, 50);
      return () => clearTimeout(timer);
    }
  }, [charIndex, formattedTitle]);

  return (
    <div className={styles.container}>
      <motion.div
        className={styles.title}
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 1, ease: "easeOut" }}
      >
        <SyntaxHighlighter
          language="javascript"
          style={coyWithoutShadows}
          customStyle={{
            background: "transparent",
            color: "#282C34",
            fontFamily: "Fira Code, Consolas, Monaco, monospace",
            fontSize: "clamp(1.2rem, 2vw, 1.8rem)",
            lineHeight: "1.6",
            textAlign: "center",
            padding: "10px",
            maxWidth: "90vw",
            margin: "0 auto",
            whiteSpace: "pre-wrap",
            wordBreak: "break-word",
            overflowWrap: "break-word",
          }}
        >
          {renderedTitle || "// –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è..."}
        </SyntaxHighlighter>
      </motion.div>

      <motion.div
        className={styles.containerPrev}
        initial={{ opacity: 0, y: 30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 1.2, ease: "easeOut" }}
      >
        <BlockTextLayout layoutText={arr[0]} className={styles.textBlock} />
        <div className={styles.centerBlock}>
          <motion.div
            className={styles.videoWrapper}
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 1, ease: "easeOut" }}
          >
            {/* <ReactPlayer
              url="videos/IMG_2187.MOV"
              width="100%"
              height="100%"
              playing={false}
              controls={true}
              loop={true}
              muted={false}
            /> */}
          </motion.div>
          <motion.button
            className={styles.learnMoreBtn}
            whileHover={{
              scale: 1.1,
              boxShadow: "0px 0px 15px rgba(138, 43, 226, 0.8)",
            }}
            whileTap={{ scale: 0.95 }}
          >
            —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ —É—á–µ–Ω–∏–∫–∞
          </motion.button>
        </div>
      </motion.div>
      <div className={styles.rowTexts}>
        <BlockTextLayout layoutText={arr[1]} />
        <BlockTextLayout layoutText={arr[2]} />
      </div>
    </div>
  );
};

export default MentorPrivew;
